--- 9장 File System & Booting ---

0. 개요

1. 리눅스 파일 시스템의 종류

Q. 파일 시스템이란 무엇이며 종류를 설명하시오.
- 파일 시스템 : 파일과 디렉토리를 구조적으로 관리하는 체계
1) ext
  - EXTended file system
  - 최대 2GB
  - 복잡하고 파편화되어 현재 사용하지 않음
2) ext2
  - 최대 32TB
3) ext3
  - 저널링 기능 도입(자동복구 지원)
  - 최대 32TB
4) ext4
  - 최대 1EB
5) xfs
  - eXtended File System
  - CentOS7부터 기본 지원
  (1) 장점
    - 이론상 900만 TB
    - 사용 가능한 inode값 충분
    - 마운트된 상태에서도 파일 시스템 확장 가능
    - 포맷 생성, 삭제 속도 ext3에 비해 3배 빠름
  (2) 단점
    - 작은 파일 시스템에서는 느림
    - 이식성 부족
    - 삭제된 파일은 복구 불가능

- "hdparm -t /dev/sda" : 디스크 읽기 테스트
- "smartctl --all /dev/sda" : 스마트 테스트
- 리눅스에서 지원하는 다른 파일 시스템 : msdos, ufs, vfat, ntfs, hfs 등

Q. 리눅스의 특수 용도의 가상 파일 시스템 5가지를 서술하시오
1) swap : 스왑 영역 관리
2) tmpfs : Temporary File System. 임시 파일 저장
3) proc : 커널의 현재 상태(프로세스에 대한 정보)
4) ramfs : 램디스크 지원
5) rootfs : 시스템 초기화 및 관리

- "/proc/filesystem" : 커널이 지원하는 파일 시스템의 종류 모두 출력

2. 리눅스 파일 시스템의 구조

Q. 파일 시스템을 구성하는 2가지 방법을 서술하시오.
1) 한 파일 시스템으로 구성
- 모든 파일과 디렉토리를 하나의 파일 시스템으로 구성
2) 여러 파일 시스템으로 구성
- 여러 파일 시스템으로 나누어 구성
- 한 곳에 문제가 생겨도 다른 시스템은 안전

3. 파일 시스템 마운트
- 마운트 : 파일 시스템을 특정 디렉토리(마운트 포인트)와 연결하는 것

Q. 부팅 시 파일 시스템이 자동으로 마운트되게 하는 방법을 서술하시오.
- /etc/fstab 파일에 장치명, 마운트 포인트, 파일 시스템 종류 등을 저장한다.

Q. /etc/fstab 파일의 구조를 설명하시오.
1) 장치명
2) 마운트 포인트
3) 파일 시스템의 종류
4) 옵션 : defaults
5) 덤프 관련 설정 : 0(불가), 1(가능)
  - 덤프 : 메모리 안에 있는 내용을 꺼내서 보는 것
6) 파일 점검 옵션 : 0(안함), 1(루트), 2(루트 이외)

- "mount" : 현재 마운트 정보 출력

Q. USB 메모리를 마운트하고 해제하는 과정을 설명하시오
1) 마운트 포인트 지정(/mnt/usb)
2) USB 연결 및 장치명 확인(fdisk -l)
3) 마운트 -> "mount /dev/sdb1 /mnt/usb"
4) 확인 -> "ls -la /mnt/usb"

5) "umount /mnt"로 해제하되 그 폴더 바깥에서 실행해야 정상 처리
6) USB 제거

4. 디스크 관리
- "df" : 디스크 공간 정보 출력

Q. df 명령으로 출력되는 항목을 서술하시오
1) 장치명
2) 전체 용량
3) 사용량
4) 남은 용량
5) 사용량 %
6) 마운트 포인트 

- "df -h" : 이해하기 쉬운 단위로 표시
- "df -T" : 파일 시스템의 종류 표시

- "du -s /etc" : 디렉토리 혹은 사용자별 디스크 사용량 확인
- 생략하면 현재 디렉토리

- "badblocks" : 장치의 배드 블록을 검색
- -v : 자세하게 / -o 결과를 파일로 저장

5. 리눅스 시스템의 부팅

Q. 리눅스 시스템의 부팅과정을 서술하시오.
1) 전원 ON
2) 바이오스 단계
  - 기본적인 하드웨어 상태 확인 후 MBR(Master Boot Record) 로딩
3) 부트 로더 단계
  - 부팅할 운영체제 선택
  - 리눅스 커널을 메모리에 로딩
4) 커널 초기화 단계
  - 시스템에 연결된 메모리, 디스크, 키보드, 마우스 등 장치 검사
  - fork를 사용하지 않는 프로세스와 스레드 생성
5) systemd 서비스 단계
  - systemd는 1번 프로세스
6) 로그인 프롬프트 출력

6. init 프로세스

Q. init 프로세스에 대해 설명하시오.
1) 전통적으로 PID가 1번인 프로세스로 모든 프로세스의 조상(지금은 systemd가 1번)
2) 부팅 과정에서 각종 서비스를 제공하는 쉘 스크립트 파일을 실행
3) 설정 파일은 /etc/inittab

- "systemctl get-default" : 현재 run-level 확인
- "systemctl set-default graphical.target" : run-level 5으로 변경

Q. run-level이란 무엇이며, 각 단계들을 서술하시오
- run-level : init은 시스템의 단계를 7개로 정의하여 각각의 셸 스크립트를 실행
0 : 시스템 종료
1 : 단일 사용자 모드
2 : 다중 사용자 모드
3 : 다중 사용자 모드(NFS 포함)
4 : 사용하지 않음
5 : X11 상태로 부팅
6 : 재시작

7. 리눅스 시스템의 종료

Q. 리눅스를 종료하는 방법 6가지를 서술하고 예를 드시오.
1) shutdown 명령
  - shotdown -h +2 "showdown!"
2) halt 명령
3) poweroff 명령
4) run-level을 0이나 6으로 전환(종료, 재시작)
  - init 0
  - init 6
5) reboot 명령어 사용
6) 전원을 끈다(최후의 수단)

Q. 시스템 로그 파일 4가지를 서술하시오.
1) utmp : 현재 로그인한 사용자 상태 정보
  - /var/run/utmp
  - w, who, finger
2) wtmp : 성공한 로그인/로그아웃 정보 및 시스템 boot/shutdown의 히스토리
  - /var/log/wtmp
  - last
3) btmp : 실패한 로그인 정보
  - /var/log/btmp
  - lastb
4) last log : 마지막으로 성공한 로그인 정보
  - /var/log/lastlog
  - lastlog

8. 데몬 프로세스
- 데몬(daemon) : 백그라운드에서 동작하면서 특정한 서비스를 제공하는 프로세스

Q. 데몬의 동작 방식 2가지를 설명하시오
1) 독자형(standalone)
  - 백그라운드에서 서비스별로 항상 동작
  - 자주 호출되는 데몬이 아니면 자원 낭비 우려
2) 슈퍼 데몬에 의한 동작
  - CentOS7은 xinetd(eXtended InterNET Daemon)
  - 평소에는 슈퍼 데몬만 동작하다가 서비스 요청이 오면 실행
  - 지연 시간이 있지만 자원 효율적 사용
  
Q. 커널 스레드 데몬에 대해 설명하시오
1) 커널의 일부분을 프로세스처럼 관리하는 데몬
2) systemd에 이어 PID 2번 데몬(kthreadd)
3) ps 명령으로 확인하면 []로 둘러싸여 있는 프로세스들

Q. 주요 데몬들에 대해 설명하시오.
1) atd (at daemon), crond (crontab daemon)
3) dhcpd, httpd
5) smtpd(메일 발신), popd(post office protocol)
7) sshd(secure shell daemon), ftpd, ntpd(network time protocol) 등

9. 응급복구

Q. root 비밀번호를 분실했을 때 응급복구하는 과정을 설명하시오
1) 부팅 시 "e"키를 누른다.
2) ro를 rw로 수정하고, 배시 셸을 실행하도록 수정
3) 비밀번호를 설정하고, init 초기화