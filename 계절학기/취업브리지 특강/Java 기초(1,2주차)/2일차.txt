19.08.07(수) 지브릿지 2일차

<자바 기초>
- package : 자바 소스들의 묶음. 반드시 사용하는 습관들일 것
  리버스 도메인 규칙을 사용함
  ex) blog.naver.com -> com.naver.blog
- access modifier : 접근 지정자. 디폴트는 같은 패키지에서만 사용할 수 있음
- superclass : 부모 클래스. (최상위가 아닌 바로 위)
- java.lang.Object는 최상위 클래스이고, java.lang은 이 클래스의 package
  // 첫 글자가 대문자로 시작하면 대부분 클래스
- interface : 구체적인 내용 없이 뼈대만 설계해놓은 것
// main은 공부할 때 실행하기 위해서 사용하는데, 요새는 직접 main을 작성할 필요가 많이 없음

- 코딩할 때 코드어시스턴트?는 사용하는 것을 권장(개발시간 단축, 스펠링미스 방지)
- Pascal Case : 첫 글자부터 대문자로 작성
  Camel Case : 첫 글자는 소문자로, 이후 부터는 대문자로 작성
   ??   Case : dash(-) 사용
  Snake Case : under bar(_) 사용

www.dinfree.com/

- 스프링프레임워크는 거의 반드시 사용
  자바의 최종 기술,, 어느 회사든 들어갈 수 있다 라고 언급하심

- 자바는 pc용 GUI프로그램 개발에는 적합하진 않음, 주로 서버측에서 돌아가는 프로그램 개발에 많이 사용

- 제대로 짠 프로그램은 for, if, while이 별로 없음
  객체지향 아키텍쳐로 설계하면 절차적인 코드를 사용할 일이 별로 없음(대신 클래스가 많음)
  
- 자바는 *이 2개 들어간 형태의 주석이 있는데, JavaDoc 주석이라 함. 자동으로 문서화 됨

- 자료형은 primitive type(원시 자료형)과 class type(클래스 타입)으로 나뉨
  int a; a가 주소를 나타내기도 함
  Product p; p가 인스턴스의 주소를 나타내는 데이터 값을 가짐
- 기본 자료형은 byte부터 시작(bit는 비효율적이여서 지원 x)
- 자바는 true, false 반드시 써야함 (대문자 x, 0이나 1로 매핑 x)






