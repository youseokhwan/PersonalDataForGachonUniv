12 표준 입출력과 파일 입출력
1. 스트림: 모든 입력과 출력을 바이트들의 흐름으로 생각하는 것
  - 스트림의 최대 장점은 장치 독립성
  - 입출력 장치에 상관없이 프로그램을 작성할 수 있다.
2. 표준 입출력 스트림: 프로그램 동작에 필수적인 몇 개의 기본적인 스트림은 실행 시 자동으로 생성되고, 종료 시 자동으로 소멸 (stdin, stdout, stderr)
3. 형식이 없는 입출력(문자, 문자열) getchar(), gets() 등
  - 형식이 있는 입출력(정수, 실수 등) printf(), scanf() 등
4. 형식 제어 문자열 ( % [플래그][필드폭][.정밀도]형식 )
5. 플래그: 출력의 정렬, 부호 및 공백 출력, 8진수 및 16진수 출력
  - - 왼쪽 정렬
  - + 항상 부호(±) 붙임
  - 0 출력 값 앞에 공백 대신 0으로 채움
  -   출력 값 앞이 양수나 0인 경우 부호 대신 공백 출력 // 띄어쓰기
  - # 8진수 출력 시 0, 16진수 0x 붙임
6. 필드폭: 데이터가 출력되는 필드의 크기 지정
  - 필드폭 > 출력 값: 공백
  - 필드폭 < 출력 값: 필드폭 확장
7. 정밀도: 실수의 경우, 소수점 이하의 자릿수의 개수
  - 예를 들어 10.3 이면 필드폭 10, 정밀도 .3이 됨
8. 형식: 출력 값을 어떤 형식으로 변환하여 출력할 것인지를 지정
  - %u: 부호 없는 10진수
  - %x: 부호 없는 16진수(소문자), %X:  부호 없는 16진수(대문자)
9. 441p scanf2.c 참고 (필드폭 지정해서 읽기)
10. 문자열 형식 지정자
  - %c(문자), %s(문자열)
  - %[abc] a, b, c로만 이루어진 문자열을 읽어들인다 (아닌 것 만나면 끝)
  - %[^abc] a, b, c를 제외하고 문자열을 읽어들인다 (아닌 것 만나면 끝)
  - %[0-9] 0에서 9까지 문자열을 읽어들인다
11. 파일: 일련의 연속된 바이트 (스트림)
  - 파일을 사용하는 이유: 데이터를 영구적으로 사용하기 보관하기 위해
  - 텍스트 파일(메모장), 이진 파일(사운드, 이미지)
12. 파일 처리의 순서: 파일 열기 -> 읽기/쓰기 -> 파일 닫기 (반드시 지켜야 함)
13. fopen(): 파일을 여는 함수 (포인터 반환)
14. 파일 모드
  - "r" 읽기 모드
  - "w" 쓰기 모드. 없으면 생성하고, 존재하면 덮어씀
  - "a" 추가 모드. 없으면 생성하고, 존재하면 이어씀
  - "r+" 읽기/쓰기 모드. 반드시 존재해야함
  - "w+" 읽기/쓰기 모드. 없으면 생성하고, 존재하면 덮어씀
  - "a+" 읽기/추가 모드. 없으면 생성하고, 존재하면 이어씀. 읽기는 어떤 위치도 가능
  - "b" 이진 파일 모드
15. fclose(): 열린 파일을 닫는 함수 (성공적으로 닫으면 0, 아니면 -1 반환)
16. 파일 입출력 라이브러리 함수
  - fputc('a', fp) 문자를 파일에 입력
  - c = fgetc(fp) 파일에서 문자를 읽어서 저장
  - fgets(buffer, 100, fp1) fp1의 문자열을 100개만큼 buffer에 저장
  - fputs(buffer, fp2) buffer의 내용을 fp2에 저장
  - fprintf(fp, "%d", number) number 변수에 있는 값을 정수형으로 fp 파일에 저장
  - fscanf(fp, "%d", &number) fp 파일에서 정수형으로 읽어서 number 변수에 저장
17. 453p fcopy1.c (텍스트 파일 복사)
18. 454p search.c (파일에서 문자열 탐색)
19. 456p score3.c (형식화된 입출력 통해 평균 계산)
  - feof() 파일의 끝인지를 검사하는 함수 (끝이면 1 반환)
20. 이진 파일 장점
  - 변환 과정이 필요 없고, 공간도 덜 차지하여 효율적이다.
21. 이진 파일 단점
  - 사람이 파일의 내용을 확인하기가 힘들다.
  - 프린터로 출력하는 것이 불가능하다.
  - 컴퓨터마다 시스템이 달라서 이식성이 떨어진다.
  - 따라서 이식성이 중요하다면 텍스트, 데이터 및 수행 속도가 중요하다면 이진 파일
22. 이진 파일 모드
  - "rb" 읽기 + 이진 모드
  - "wb" 쓰기 + 이진 모드
  - "ab" 추가 + 이진 모드
  - "rb+" 읽기/쓰기 +이진 모드
  - "wb+" 쓰기/읽기 + 이진 모드
  - "ab+" 읽기/추가 + 이진 모드
23. fwrite( buffer, size, count, fp ); 메모리 블록을 이진 파일에 저장
  - fread( &buffer[i], sizeof(int), 1, fp ); 이진 파일에서 값을 읽음
24. 462p binary_file.c (데이터베이스)
25. 순차 접근: 파일의 처음부터 순차적으로 읽거나 기록하는 것
  - 임의 접근: 파일의 어느 위치에서든지 읽기와 쓰기가 가능
26. 파일 위치 표시자: 읽기와 쓰기 동작이 현재 어떤 위치에서 이루어지는지를 나타냄
27. fseek(fp, 0L, SEEK_SET) 위치 표시자를 조작하는 함수
  - SEEK_SET 시작 (값 0)
  - SEEK_CUR 현재 위치 (값 1)
  - SEEK_END 끝 (값 2)
