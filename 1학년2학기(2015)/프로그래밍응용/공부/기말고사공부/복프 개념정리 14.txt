14 동적 메모리
1. 동적 메모리 할당: 프로그램 실행 도중에 동적으로 메모리를 할당받는 것
  - 정적 메모리 할당은 메모리가 낭비되거나 부족한 경우가 있어서 비효율적인 경우가 있다
2. 동적 메모리 사용 절차
  - 얼마나 할당받을 것인지 결정
  - 라이브러리 함수를 호출하여 운영 체제에게 메모리를 요청
  - 충분한 메모리가 존재하면 요청 승인되고, 메모리 할당
  - 프로그램이 할당된 메모리 사용
  - 사용이 끝나면 운영체제에게 다시 반납
3. malloc( )
  - memory allocation (메모리 할당)
  - stdlib.h 필요
  - pc = (char *)malloc(sizeof(char));
4. free( ) 할당 되었던 메모리 블록을 시스템에 반납
5. 520p malloc1.c (하나의 문자를 저장)
6. calloc( )
  - 0으로 초기화된 메모리를 할당
  - 바이트가 아닌 항목 단위로 메모리 할당
  - pc = (int *)calloc(5, sizeof(int));
7. realloc( )
  - 할당하였던 메모리 블록의 크기를 변경
  - pc = realloc(p, 7 * sizeof(int));
8. 배열은 구현이 간단하고 빠르다는 장점
  - 크기가 고정된다는 단점
9. 연결 리스트란 물리적으로 흩어져 있는 자료들을 서로 연결하여 하나로 묶는 방법
  - 배열의 단점 보완
  - 공간이 필요할 때마다 동적으로 공간을 만들어서 쉽게 추가할 수 있다
  - 구현이 어렵고 오류가 나기 쉽다는 단점
10. 노드, 데이터 필드, 링크 필드
11. 헤드 포인터: 첫 번째 노드를 가리키는 변수, 연결 리스트의 이름
12. 자기 참조 구조체: 멤버 중 자기와 같은 타입의 구조체를 가리키는 포인터가 존재하는 구조체
13. 535p book2.c (책 목록 관리 프로그램 - 연결 리스트)

