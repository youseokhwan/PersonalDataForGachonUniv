2019.10.11(금) 6주차

[오늘]
- 액티비티 전환 연습
- 오후엔 파이어베이스 이용 연습
- PPT 수정된 내용 있으니 다운로드

[시험공지]
- 10월 25일
- 4문제 출제(PPT 내에서 적당하게?)
- 서술하는 문제 2문제 / 코드 삽입하는 문제 2문제

[실습]
1. 액티비티 전달 - 변수 전달
2. 액티비티 전달 - 객체 전달
3. 액티비티 되돌아올 때 객체 전달(회원가입 화면에서 입력된 정보를 객체로 만들어서 로그인 화면으로 전달하고, ID/PW값 채우기)
  - UserInfo 클래스 생성
  
1. LogIn, SignUp 배경화면 바꾸기
2. LogIn, SignUp 스타일 적용하기
3. mp3 음악재생 버튼 (서비스)

------------------
------------------

2019.10.04(금) 5주차

[오전]
1. TextView에 텍스트 크기랑, 색상 설정
2. EditText에 이벤트 리스너 추가해서
   마지막에 입력된 문자가 x인 경우 Toast Message 출력
3. Button, ImageView를 같이 넣어서 버튼을 클릭할 때마다 2개의 이미지가 번갈아 출력되도록 설정

[오후]
1. 체크박스 2개가 라디오 버튼처럼 동작하도록 구현
2. 라디오버튼 클릭에 따라 ImageView의 그림이 변경되도록 구현
3. SeekBar를 조절할 때 TextView의 size가 조절되도록(10~30)

[실습]
ID, PW(2개), 이름, 전화번호
성별(라디오버튼)
취미(체크박스, 4개)
sign up 버튼 눌렀을 때 패스워드 2개가 동일한지 확인하는 작업 + 모든 edittext가 다 채워져있는지 검사
cancel 버튼 : 로그인 액티비티로 돌아가는 기능 구현

[과제]
(1) Adobe XD로 메인화면 디자인하기
(2) 2개 이상의 이벤트 리스너를 활용하여 기능 구현
.xd파일, .java파일, .xml파일 3개 압축하여 이메일로 전송
cv2lab@gmail.com

------------------
------------------

2019.09.27(금) 4주차

[공지]
- 로그인 과정 UI, Firebase(DB) 연동 제작 예정
- 질문사항 있으면 언제든지 이메일로 문의
- 마지막 수업(3주차) 때 안드로이드+스프링 시험

[목차]
- 네이티브 앱과 하이브리드 앱의 차이점(강의에선 네이비트 앱)
- UI/UX는 어떻게 설계하는 지, 어떤 툴을 사용하는 지

[모바일 개발 환경 특성]
- 모바일 전용 운영체제
- 언제든 사용 가능한 접근성
- PC와 다른 터치, 제스처, 오디오 등 상호작용
- 다양한 센서(자이로, 지문인식, 카메라 등)
- 근거리 통신

- 안드로이드는 Java와 C++ 사용 가능
- 개발 툴은 과거엔 Eclipse였으나 최근엔 거의 Android Studio 사용
- 가장 많은 점유율 차지(86%), 2005년 구글이 인수
- 최근엔 64bit 디바이스가 많아서 롤리팝 5.0 이상으로 개발(최소 킷캣 4.4 이상으로 개발)

[안드로이드 주요 기능]
- 모바일 기기에 최적화된 Dalvik or 아트런타임 제공
- 전용 데이터베이스 SQLite 제공

[안드로이드 특성]
- 핵심 커널은 리눅스로 구성(5계층: 애플리케이션, 애플리케이션 프레임워크, 라이브러리, 안드로이드 런타임, 리눅스 커널)
- 기본적으로 Java를 사용하지만, NDK 등에서는 C, C++ 개발 가능
- 오픈소스 지향(관련 문서, 개발 도구 등 무료)

[계층 구조]
- (그림 참고)

[하이브리드 앱]
- 겉은 네이티브 앱으로 만들고 속은 웹 앱으로 제작하여 하이브리드 앱 제작
- 디바이스의 기능도 사용할 수 있고 개발 기간도 단축할 수 있음(반응형 웹)
- 웹 페이지만 업데이트하면 실시간으로 반영

[앱 개발 환경의 종류]
- 응용 프로그램(Java)
- 시스템 응용 프로그램(C/C++)
- 하드웨어 및 커널 제어 프로그램(C/C++)

[네비게이션] (책에 없는내용)
- 화면의 이동을 담당하는 UI
1) 계층적 네비게이션: 사용자가 목적지에 도달할 때까지 하나씩 제공
2) 평면 네비게이션: Tab bar의 형태, 항상 표시되는 메뉴를 통해 사용자가 즉시 다른 콘텐츠로 이동
3) 경험 기반 네비게이션: 콘텐츠 자체가 네비게이션 역할(게임이나 E-Book에 적합)

[설계 프로세스]
Idea -> Spec -> Wireframe -> Prototype -> Visual Design <-> Development
* Wireframe : UI/UX 설계
(클라이언트의 요구사항이 있을 경우 더 복잡해짐)

- 프로토타이핑
  - 코딩을 하지 않고 디자이너와 개발자가 의사소통하여 화면 설계
  - Wireframe, Design Prototype 설계
  - Adobe XD, Power Mockup, Balsamiq 등 툴 사용(강의에선 Adobe XD 사용)
  
[Adobe XD]
- 예상되는 결과물을 이미지로 프로토타입 구현

[뷰, 레이아웃, 위젯]
- 강의에선 LinearLayout 사용
- match_parent : 상위 UI에 딱 맞는 사이즈
