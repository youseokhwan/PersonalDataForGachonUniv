스택 정의:First In Last Out / Last In First Out 후입선출 구조
먼저 들어간 자료가 나중에 나오는 구조
일상생활 예: 연탄을 쌓아올리는 것 / 접시를 쌓아올리는 것 등

push 알고리즘

pop 알고리즘

스택의 응용
1.역순 문자열
2.시스템 스택
3.수식의 괄호 검사
4.수식의 표기법 변경
5.후위 표기식 연산


큐 정의:First In First Out / 먼저 들어간 자료가 먼저 나오는 자료구조
일상생활 예: 은행 번호표 시스템, 꼬리잡기 놀이
isEmpty 알고리즘
front= rear : 비어있음
isFull 알고리즘(선형 원형)
rear=n-1;큐가 꽉참
((rear+1) mod n) = front; 큐가 꽉참
enQueue 알고리즘

deQueue 알고리즘

덱: 큐의 양쪽에서 삽입과 삭제를 동시에 할 수 있는 자료구조. 스택과 큐의 성질을 동시에 가지고 있다.

큐의 응용:
1.운영체제의 작업 큐
2.시뮬레이션의 큐잉 시스템


트리: 자료들 간의 계층 관계를 가진 자료구조
일상생활에서의 예: 가계도
이진 트리: 트리의 모든 차수가 2 이하인 트리
이진트리의 분류
1.포화 이진 트리: 모든 레벨에 노드가 꽉차있는 상태
2.완전 이진 트리: 빈자리없이 노드가 꽉차있는 상태
3.편향 이진 트리: 한쪽 방향의 서브 트리만 가지고 있는 트리

순회: 모든 노드들을 한번씩 탐색하는 것
1.전위순회 D-L-R
2.중위순회 L-D-R
3.후위순회 L-R-D

이진탐색트리:원소의 크기에 따라 노드의 위치를 정의한 것
키:식별할 수 있는 유일한 값

이진탐색트리의 삭제연산
1.차수 0: 노드를 삭제하고 그 부모노드의 링크값을 null로 설정
2.차수 1: 노드를 삭제하고 그 자식 노드를 부모 노드의 자리로 승격
3.차수 2: 노드를 삭제하고 자손 노드 중에서 후계자를 찾은 뒤 올림 후 차수 1일 때 과정 실행

히프:완전 이진 트리에서 키값이 가장 큰 노드나 가장 작은 노드를 찾기 위해서 만든 자료구조
히프의 삽입연산
1.마지막 노드 다음 자리에 삽입
2.부모노드와 계산

히프의 삭제연산
1.루트 노드의 원소 삭제
2. 마지막 노드 루트로 올림
3. 비교

그래프: 연결되어있는 원소간의 관계를 표현한 자료구조
일상생활에서의 예:전철 노선도, 물질의 분자구조

종류
1.무방향 그래프:
2.방향 그래프
3.완전 그래프:
4.부분 그래프
5.가중 그래프

그래프순회
1.깊이우선탐색DFS스택
2.너비우선탐색BFS큐


신장트리:n개의 노드와 n-1개의 간선으로 이루어진 트리
최소비용신장트리:가중치의 합이 가장 작은 신장트리

알고리즘
1.kruskal1 : 가장 큰 간선부터 제외
2.kruskal2 : 가장 작은 간선부터 삽입
3.prime : 한 정점에서 확장

정렬: 오름차순이나 내림차순으로 재배열하는 것

분류
1.실행 방법에 따른 분류
1-1.비교식 정렬:키값 한번에 2개씩 비교
1-2.분산식 정렬: 부분집합 이용해서 비교
2.정렬 장소에 따른 분류
내부정렬
2-1.교환방식: 선택,버블,퀵
2-2.삽입방식: 삽입,셸
2-3.병합방식: 2-way,n-way
2-4.분배방식:부분집합 기수
2-5.선택방식:이진트리 히프, 트리
외부정렬
2-1. 병합방식:파일을 나눠서 내부정렬 (2-way, n-way)

선택정렬:
버블정렬:
퀵정렬:
삽입정렬: