1. 컴퓨터시스템 개요
* 컴퓨터시스템의 구성: H/W + 시스템 S/W + 응용 S/W
* 하드웨어: 정보를 처리하는 물리적 실체
* 소프트웨어: 정보처리의 종류와 수행 시간을 지정해주는 명령들의 집합
1.1 컴퓨터의 기본 구조
	* 중앙처리장치(CPU): '프로그램 실행'과 '데이터 처리'라는 중추적인 기능 수행
	* 주기억장치, 보조저장장치, 입출력장치
1.2 정보의 표현과 저장
	* 정보의 종류: 프로그램 코드, 데이터
	* 기계어: H/W가 이해하는 언어, 2진수로 구성
	* 어셈블리어: 기계어와 고급 언어의 중간 단계 (어셈블러 사용)
	* 고급 언어: 사람이 이해하기 쉬운 언어 (컴파일러 사용)
	* 니모닉스: 명령어를 간략화한 기호 (LOAD, ADD, STOR 등)
	* 명령어 형식: 연산코드 + 오퍼랜드 (ex 001 00101)
	* 단어(Word): CPU에 의해 한 번에 처리될 수 있는 비트들의 그룹
1.3 시스템의 구성
	1.3.1 CPU와 기억장치의 접속
		* 시스템 버스: CPU와 다른 요소들 간의 정보교환 통로 (주소 버스 + 데이터 버스 + 제어 버스)
		* 주소 버스: 주소 정보 전달(단방향성), 16비트->2^16개 지정 가능
		* 데이터 버스: 데이터 정보 전달(양방향성), 32비트->32비트씩
		* 제어 버스: 시스템 요소들의 동작 제어
		* 기억장치 쓰기 동작: 주소와 데이터를 보내는 동시에 활성화
		  쓰기 시간: 주소와 데이터를 보낸 순간부터 저장이 완료될 때까지의 시간
		* 기억장치 읽기 동작: 주소를 보내는 동시에 활성화, 일정 시간 경과 후 데이터 읽어 들임
		  읽기 시간: 주소를 보낸 순간부터 읽기 동작이 완료될 때까지의 시간
	1.3.2 CPU와 I/O 장치의 접속
	1.3.3 전체 시스템의 구성
		* 컴퓨터시스템이 수행할 수 있는 기능: 프로그램 실행, 데이터 저장, 데이터 이동, 데이터 입력 및 출력, 제어
1.4 컴퓨터 구조의 발전 과정
	1.4.1 초기 컴퓨터들의 구조
		* 파스칼: 덧셈과 뺄셈을 하는 기계적인 카운터
		* 라이프니츠: 곱셉과 나눗셈 추가, 2진법 창시
		* Difference Engine(찰스 배비지): 프린트 가능 (덧셈, 뺄셈)
		* Analytical Engine(찰스 배비지): 일반목적용 계산기
		* ANIAC: 진공관을 이용한 최초의 전자식 컴퓨터
		* 폰노이만 설계 개념: 2진수 체계 사용, 프로그램과 데이터를 내부에 저장 (EDVAC)
		* IAS 컴퓨터: 프로그램 제어 유닛, ALU, 주기억장치, 입출력장치
		* 폰노이만 아키텍처: 프로그램 카운터(PC)가 지정하는 순서대로 실행
	1.4.2 주요 컴퓨터 부품들의 발전 경위
		* 진공관(1세대), 트랜지스터(2세대), IC(3세대), SSI, MSI, LSI(4세대), VLSI, ULSI
		* IC의 이점: 전기적 통로 짧아짐(속도 상승), 컴퓨터 크기 감소, 신뢰성 향상, 냉각 장치 소형화, 가격 하락
	1.4.3 컴퓨터시스템의 분류와 발전 동향
		* 개인용 컴퓨터: 데스크탑, 노트북 등
		* 임베디드 컴퓨터: 장치 내부에 설계되어, 동작을 제어하는 소형 컴퓨터 (가전 제품)
		* 워크스테이션: 64비트 고성능 컴퓨터 (Unix, Linux 사용)
		* 슈퍼미니컴퓨터: 다중프로세서, 서버 시스템 다운사이징
		* 대형 메인프레임 컴퓨터: DB 저장
		* 슈퍼컴퓨터: 현존하는 컴퓨터 중 성능이 월등한 컴퓨터 (일기 예보, 인공 지능)
			* 파이프라인 슈퍼컴퓨터, 대규모 병렬컴퓨터, 클러스터 컴퓨터(고속 LAN)

2. CPU의 구조와 기능
* CPU의 기능
	* 명령어 인출, 명령어 해독 -> 공통적 수행
	* 데이터 인출, 데이터 처리, 데이터 저장 -> 필요적 수행
2.1 CPU의 기본 구조
	* CPU는 산술논리연산장치(ALU), 레지스터 세트, 제어 유니트로 구성
	* ALU: 산술 및 논리 연산 실행
	* 레지스터: CPU 내부에 위치한 기억장치, 가장 빠름
	* 제어 유니트: 인출된 명령어 해독하고, 제어 신호 순차적으로 발생
	* CPU 내부 버스
2.2 명령어 실행
	* 명령어 사이클: 한 명령어를 실행하는데 필요한 전체 과정, 명령어 인출과 명령어 실행 단계로 나뉨
	* 프로그램 카운터(PC): 다음에 인출될 명령어의 주소를 가지고 있는 레지스터
	* 누산기(AC): 데이터를 일시적으로 저장
	* 명령어 레지스터(IR): 가장 최근에 인출된 명령어 저장
	* 기억장치 주소 레지스터(MAR): 주소 레지스터
	* 기억장치 버퍼 레지스터(MBR): 데이터가 일시적으로 저장
	2.2.1 인출 사이클
		* t0: MAR <- PC
		  t1: MBR <- M[MAR], PC <- PC + 1
		  t2: IR <- MBR
	2.2.2 실행 사이클
		* 데이터 이동
			* t0: MAR <- IR(addr)
			  t1: MBR <- M[MAR]
			  t2: AC <- MBR
		* 데이터 저장
			* t0: MAR <- IR(addr)
			  t1: MBR <- AC
			  t2: M[MAR] <- MBR
		* 데이터 처리
			* t0: MAR <- IR(addr)
			  t1: MBR <- M[MAR]
			  t2: AC <- AC + MBR
		* 프로그램 제어
			* t0: PC <- IR(addr)
	2.2.3 인터럽트 사이클

3. 컴퓨터 산술과 논리 연산