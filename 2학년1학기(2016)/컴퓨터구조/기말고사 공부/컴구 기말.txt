컴퓨터구조 기말고사
6/21(화) 11시 603호


Chapter 04 제어 유니트
     4.1 제어 유니트의 기능
제어 유니트가 수행하는 주요 기능

명령어 코드의 해독
명령어 실행에 필요한 제어 신호들의 발생

마이크로명령어(제어 단어): 각 마이크로-연산을 나타내는 2진 비트 표현
마이크로프로그램: 마이크로명령어들의 집합
루틴: CPU의 특정 기능을 수행하기 위한 마이크로프로그램

     4.2 제어 유니트의 구조

사상(mapping) 방식: 명령어의 연산 코드를 이용하여 해당 사이클 루틴의 시작 주소를 찾는 기법

     4.3 마이크로명령어의 형식
     4.4 마이크로프로그래밍
          4.4.1 인출 사이클 루틴
          4.4.2 간접 사이클 루틴
          4.4.3 실행 사이클 루틴
     4.5 마이크로프로그램의 순서제어

순서제어: 제어 유니트에서 다음에 실행될 마이크로명령어의 주소를 결정하는 기능
수직적 마이크로프로그래밍: 적은 수의 제어 비트들만 두고, 필요한 수만큼의 제어 신호들로 확장시키는 마이크로프로그래밍 방식
수평적 마이크로프로그래밍: 필요한 제어신호 수만큼의 비트들을 포함시키고, 각 비트를 직접 사용하는 마이크로프로그래밍 방식


Chapter 05 기억장치
     5.1 기억장치의 분류와 특성

액세스(access): 기억장치에 대한 읽기 및 쓰기 동작
순차적 액세스: 처음부터 순서대로 액세스하는 방식
직접 액세스: 정보가 위치한 근처로 직접 이동시킨 다음에, 순차적 검색으로 최종 위치에 도달하여 액세스하는 방식
임의 액세스: 기억 장소들이 임의로 선택될 수 있으며, 기억장치 내의 어떤 위치든 액세스에 걸리는 시간이 동일한 방식
연관 액세스: 각 기억 장소에 포함된 키값의 검색을 통하여 액세스할 위치를 찾아내는 방식

기억장치 시스템을 설계하는 데 있어서 고려해야 할 주요 특성
용량
액세스 속도
전송 단위: CPU가 한 번의 기억장치 액세스에 의해 읽거나 쓸 수 있는 비트 수
주소지정 단위: 하나의 주소에 의해 액세스되는 비트들의 그룹

액세스 속도와 관련된 파라미터
액세스 시간: 주소와 읽기/쓰기 신호가 기억장치에 도착한 순간부터 데이터가 저장되거나 읽혀지는 동작이 완료될 때까지의 시간
기억장치 사이클 시간: 액세스 시간과 데이터 복원 시간을 합한 시간
데이터 전송률: 기억장치로부터 초당 읽혀지거나 쓰여질 수 있는 비트 수

물리적인 재료에 의한 분류
반도체 기억장치 (LSI 또는 VLSI)
자기-표면 기억장치 (디스크 및 테이프)
광 저장장치 (레이저 광)
데이터를 저장하는 성질에 따른 분류
휘발성 기억장치: 전력공급이 중단되면 저장된 내용이 사라지는 기억장치
비휘발성 기억장치: 전력공급이 중단되어도 저장된 내용이 그대로 유지되는 기억장치

     5.2 계층적 기억장치시스템

계층적 기억장치시스템: 속도, 가격 및 크기가 다양한 기억장치들을 계층적으로 설치함으로써 성능대가격비를 높이는 시스템 구성 방식

          5.2.1 필요성 및 효과

기억장치의 특성들 간 관계
액세스 속도가 높아질수록, 비트당 가격도 높아진다.
용량이 커질수록, 비트당 가격은 낮아진다.
용량이 커질수록, 액세스 속도는 낮아진다.

지역성의 원리: CPU가 기억장치의 한정된 몇몇 영역들을 집중적으로 액세스하면서 작업을 수행한다는 원리
시간적 지역성: 최근에 액세스된 데이터가 가까운 미래에 다시 액세스될 가능성이 높아지는 특성
공간적 지역성: 서로 인접하여 저장되어 있는 데이터들이 연속적으로 액세스될 가능성이 높아지는 특성
순차적 지역성: 분기가 발생하지 않는 한, 명령어들은 기억장치에 저장된 순서대로 인출되어 실행된다.

          5.2.2 기억장치 계층

내부 기억장치: CPU가 직접 액세스 할 수 있는 기억장치들 (CPU 레지스터, 캐시, 주기억장치)
외부 기억장치: CPU가 직접 액세스 할 수 없으며, 장치 제어기를 통해서만 액세스 할 수 있는 기억장치들 (디스크 캐시, 디스크, 자기 테이프 및 CD-ROM)
외부 기억장치에서 내부 기억장치로 갈수록
비트당 가격이 높아지고
용량이 감소하며
액세스 시간은 짧아지고
CPU에 의한 액세스 빈도는 높아진다.

캐시 메모리: CPU와 주기억장치 간의 속도 차이를 보완해주기 위하여 데이터를 일시 저장해주는 중간 버퍼 기능을 수행하는 메모리
디스크 캐시: 주기억장치와 디스크의 속도 차이를 줄이기 위하여, 그 두 장치들 사이에 설치하는 반도체 기억장치

     5.3 반도체 기억장치
          5.3.1 RAM

RAM(Random Access Memory): 읽기와 쓰기가 모두 가능한 반도체 기억장치
DRAM(Dynamic RAM): 충전 방식을 이용하여 데이터를 저장하는 RAM, 주기적인 재충전 필요
SRAM(Static RAM): 플립-플롭형 기억 셀을 이용함으로써, 전력이 공급되는 동안에는 데이터가 계속 유지되는 RAM
RAS(row address): 기억장치의 행 주소 래치 신호
CAS(column address): 기억장치의 열 주소 래치 신호

          5.3.2 ROM

ROM(Read Only Memory): 저장된 내용을 읽는 것만 가능한 반도체 기억장치
ROM에 저장되는 내용
시스템 초기화 및 진단 프로그램
빈번히 사용되는 함수들과 서브루틴들
제어 유니트의 마이크로프로그램
PROM(Programmable ROM): 한 번은 쓰는 것도 가능한 ROM
EPROM(Erasable ROM): 자외선을 이용하여 저장된 내용을 삭제할 수 있어서, 여러 번이 갱신이 가능한 PROM
EEPROM(Electrically ROM): 전기적으로도 삭제할 수 있는 PROM
플래시 메모리(flash memory): 삭제에 걸리는 시간이 매우 짧은 EEPROM이며, 쓰기 동작과 삭제 동작시의 데이터 크기가 서로 다름

     5.4 기억장치 모듈의 설계

ROM과 RAM으로 구성된 주기억장치를 가진 간단한 마이크로컴퓨터 설계 단계
컴퓨터에 필요한 전체 기억장치 용량을 결정한다.
사용가능한 칩들을 조사하고, 그들에 대한 주소 표를 작성한다.
세부적인 회로를 설계한다.

     5.5 캐시 메모리

캐시 메모리(cache memory): CPU와 주기억장치의 속도 차이를 보완하기 위하여 그 사이에 설치하는 반도체 기억장치
캐시 적중: CPU가 액세스하려는 데이터가 이미 캐시에 적재되어 있는 상태
캐시 미스: CPU가 액세스하려는 데이터가 캐시에 없어서 주기억장치로부터 인출해 와야 하는 상태
캐시 적중률: 전체 기억장치 액세스들 중에서 캐시에 적중되는 비율
캐시 설계에 있어서의 공통적인 목표
캐시 적중률의 극대화
캐시 액세스 시간의 최소화
캐시 실패에 따른 지연시간의 최소화
주기억장치와 캐시간의 데이터 일관성 유지 및 그에 따른 오버헤드의 최소화

          5.5.1 캐시 용량
          5.5.2 인출 방식

요구 인출: 캐시 미스가 발생한 경우에, CPU가 필요한 정보만 주기억장치로부터 캐시로 인출해오는 방식
선인출: CPU가 필요한 정보 외에도 그와 인접해 있는 정보들을 함께 캐시로 인출해 오는 방식
캐시 라인: 주기억장치로부터 캐시로 인출되는 단위인 한 블록이 적재되는 캐시내 공간
태그: 캐시 라인을 공유하는 블록들 중에서 어느 것이 적재되어 있는지를 가리키는 비트들

          5.5.3 사상 방식

사상 방식: 주기억장치 블록이 어느 캐시 라인에 적재될 수 있는 지를 결정해주는 알고리즘
직접 사상: 주기억장치 블록이 지정된 어느 한 라인에만 적재될 수 있는 사상 방식
완전-연관 사상: 주기억장치 블록이 캐시의 어느 라인으로든 적재될 수 있는 사상 방식
세트-연관 사상: 주기억장치 블록이 지정된 어느 한 세트로만 적재될 수 있으며, 각 세트는 두 개 이상의 라인들로 구성된 사상 방식

          5.5.4 교체 알고리즘

최소 최근 사용(LRU: Least Recently Used) 알고리즘: 최근의 사용 빈도가 가장 낮은 블록을 선택하여 교체하는 방식
FIFO(First In First Out) 알고리즘: 캐시에 적재된 지 가장 오래된 블록을 교체하는 방식
최소 사용 빈도(LFU: Least Frequently Used) 알고리즘: 캐시에 적재된 이래 사용된 빈도가 가장 낮은 블록을 교체하는 방식
임의(random)

          5.5.5 쓰기 정책

쓰기 정책: 캐시에 적재된 데이터를 새로운 값으로 변경할 때 주기억장치에 갱신하는 시기와 방법을 결정하는 방식
write-through: 캐시에 쓰기 동작을 수행할 때 주기억장치에도 동시에 이루어지는 방식
write-back: 쓰기 동작이 캐시까지만 이루어지는 방식
데이터 불일치 문제: 주기억장치에 저장된 데이터와 캐시들에 적재된 복사본이 서로 다른 값을 가지는 현상

          5.5.6 다중 캐시

온-칩 캐시: CPU 칩 내부에 포함되어 있는 캐시
계층적 캐시: 여러 레벨의 캐시들을 계층적으로 설치한 구조
분리 캐시: 명령어와 데이터를 분리하여 별도로 저장하는 캐시 구조

     5.6 최신 기억장치 기술
          5.6.1 SDRAM

동기식 DRAM (SDRAM: Synchronous DRAM): 액세스 및 데이터 전송 동작이 시스템 클록 신호에 동기화되어 수행되는 DRAM
버스트 모드: 한 번의 액세스 동작 때 여러 바이트들을 연속적으로 전송하는 방식
버스트 길이: 버스트 모드에서 연속적으로 전송되는 바이트들의 수
CAS 지연: DRAM 칩으로 CAS 신호와 열 주소가 인가되는 순간부터 데이터가 인출되어 버스에 실릴 때까지의 시간

          5.6.2 DDR SDRAM
DDR(Double Date Rate): SDRAM에서 액세스된 데이터들을 전송할 때 버스 클록의 상승 에지와 하강 에지에서 각각 하나씩 전송함으로써 클록 당 두 번 전송하는 기법
DDR SDRAM: DDR 전송 방식이 사용되는 SDRAM
DDR2 SDRAM: 두 배 높은 버스 클록 주파수를 사용하는 DDR SDRAM
DDR 기술의 기본 원리
버스 클록의 상승 에지와 하강 에지에서 모두 데이터 전송이 발생되게 한다.
기억장치 제어기 및 버스 인터페이스 회로를 개선함으로써 버스 클록 주파수를 높인다.
기억장치 대역폭: 기억장치로부터 CPU로 제공될 수 있는 단위시간당 데이터 전송량
기억장치 랭크: 데이터 입출력 폭이 64비트가 되도록 구성한 기억장치 모듈
SIMM(단면 모듈): 칩들과 접속 핀들을 한 면에만 부착한 기억장치 모듈 기판(PCB)
DIMM(양면 모듈): 칩들과 접속 핀들을 양면에 모두 부착한 기억장치 모듈 기판(PCB)
단일-랭크 모듈: 하나의 랭크로 구성된 기억장치 모듈
2중-랭크 모듈: 두 개의 랭크들로 구성된 기억장치 모듈
4중-랭크 모듈: 네 개의 랭크들로 구성된 기억장치 모듈로서, 양면 기판의 면 당 두 개씩의 랭크들 배치

          5.6.3 차세대 비휘발성 기억장치

PRAM(Phase-change RAM): 화합물 반도체의 상태 변화를 이용하여 2진 정보를 저장하는 RAM
FRAM(Ferroelectric RAM): 강유전체의 전극 위치를 조절하여 2진 정보를 저장하는 반도체 기억장치
MRAM(Magnetic RAM): 강자성체에서 자화되는 방향을 조절하여 2진 정보를 저장하는 반도체 기억장치



Chapter 06 보조저장장치
     6.1 자기 디스크

자기 디스크(하드 디스크, 디스크)
트랙: 디스크 평판 위에 동심원들로서, 데이터가 실제 저장되는 곳
디스크 쓰기: 트랙 상에 데이터를 저장하는 동작
디스크 읽기: 저자된 데이터를 디스크 표면으로부터 감지하여 인출하는 동작
이동-헤드 디스크: 하나의 헤드만 부착된 디스크 팔을 이동시키면서 데이터를 액세스하는 디스크
다중-헤드 디스크: 디스크 팔에 여러 개의 헤드들을 장착함으로써 헤드의 이동 거리를 단축시키는 디스크
고정-헤드 디스크: 각 트랙마다 헤드를 한 개씩 장착함으로써 헤드가 움직일 필요가 없는 디스크

          6.1.1 디스크의 구조

섹터(sector): 트랙의 분할된 각 부분으로서, 데이터 전송 단위인 한 블록을 저장
등각속도(CAV): 중심부에 가까운 트랙을 액세스하든 멀리 위치한 트랙을 액세스하든 일정한 속도로 회전시키는 방식
디스크 드라이브(disk drive): 디스크 평판, 디스크 팔, 회전구동장치 및 데이터 전송회로를 포함한 패키지
실린더: 서로 다른 디스크 표면들 위에 있지만 동일한 반경에 위치하고 있는 트랙들의 집합

          6.1.2 디스크 액세스 시간

디스크 액세스 시간 = 탐색 시간 + 회전 지연시간 + 데이터 전송 시간
탐색 시간(seek time): 헤드를 액세스할 트랙으로 이동시키는게 걸리는 시간
회전 지연시간(rotational latency): 헤드가 해당 트랙에 도달한 순간부터 원하는 섹터가 회전하여 헤드 아래에 도달할 때까지의 시간
데이터 전송 시간(data transfer time): 헤드를 통하여 섹터의 데이터 비트들을 전송하는데 걸리는 시간

     6.2 RAID

RAID(Redundant Array of Independant Disks): 다수의 작은 디스크들을 배열로 연결하여 용량을 늘리고 신뢰성도 향상시킨 대용량 디스크시스템

          6.2.1 RAID 출현의 배경

디스크 인터리빙(disk interleaving): 데이터 블록들을 여러 개의 디스크들에 분산 저장하는 기술
MTTF(Mean Time To Failure): 장치에 결함이 발생하는 평균 시간 간격
검사 디스크(check disk): RAID에서 오류 검출 및 복구에 사용될 비트들을 저장하기 위해 추가되는 디스크
MTTR(Mean Time To Repair): 데이터 오류 혹은 디스크 결함 발생 시에 원래 내용을 복구하는 데 걸리는 평균 시간

          6.2.2 RAID의 종류

디스크 미러링: 디스크에 데이터를 저장할 때 다른 디스크에도 같은 내용을 동시에 저장하는 기법
작은 쓰기 문제: RAID-5에서 한 블록을 디스크에 쓰는 경우에 네 번의 디스크 액세스가 필요하게 되는 문제점

     6.3 플래시 메모리와 SSD

솔리드-스테이트 드라이브(SSD: Solid State Drive): 플래시 메모리 칩들을 이용하여 구성한 대용량 저장장치
플래시 메모리(flash memory): EEPROM의 일종으로서, 저장밀도가 높고 저전력 고신뢰성의 특징을 가진 반도체 기억장치

          6.3.1 플래시 메모리

터널링 효과: N-채널의 전자들이 강력한 전기장의 영향을 받아 부동 게이트로 들어가는 현상
SLC(single-level chip): 한 비트씩 저장하는 셀들로 이루어진 플래시 메모리 칩
MLC(multi-level chip): 두 비트의 조합인 네 가지 값들을 구분해주는 셀들로 이루어진 플래시 메모리 칩
TLC(triple-level chip)

          6.3.2 SSD

플래시 변환 계층(FTL: Flash Translation Layer): 플래시 메모리의 블록/페이지 구조를 논리적으로 HDD의 섹터와 같은 구조로 변환해주는 S/W
FTL의 기능
마모 평준화(wear leveling): 플래시 메모리의 모든 페이지들이 균등하게 사용되도록 관리함으로써 수명을 연장시키는 기술
쓰레기 수집(garbge collection): 수정되었으나 삭제되지 않은 무효 페이지들을 모아두었다가 한꺼번에 삭제하는 작업
초과 대비공간(over-provisioning): 마모평준화의 효과를 높이기 위하여 SSD 내부에 추가하는 여유 저장 공간

     6.4 광 저장장치
          6.4.1 CD-ROM

CD-ROM(Compact Disk ROM): 저장된 내용을 읽기만 할 수 있는 광디스크
등선속도: 트랙 위를 이동하는 헤드의 속도가 트랙의 위치에 상관없이 항상 일정하도록 제어하는 방식
장점
정보 저장 용량이 매우 크다.
저렴한 가격으로 대량 복제될 수 있다.
단점
읽기만 가능하고, 내용을 변경할 수 없다.
액세스 시간이 자기 디스크보다 훨씬 더 길다.

          6.4.2 CD-R/RW

CD-R(CD-Recordable): 사용자가 한 번은 기록할 수 있는 CD-ROM (WORM: Write Once Read Many)
CD-RW(CD-ReWritable): 여러 번의 재기록이 가능한 CD-ROM

          6.4.3 DVD

DVD(Digital Video Disk): CD를 두 개 겹쳐 놓은 것

          6.4.5 블루-레이 디스크(BD)

블루-레이 디스크(BD: Blu-ray Disc): 매우 짧은 파장의 레이저를 이용한 대용량 광디스크 저장장치
BD-R(BD-Recordable): 한 번의 쓰기가 가능한 블루-레이 디스크
BD-RE(BD-Rewritable): 여러 번의 재기록이 가능한 블루-레이 디스크



Chapter 07 시스템 버스, I/O 및 인터럽트
     7.1 시스템 버스
          7.1.1 시스템 버스의 조직

데이터 버스: 시스템 요소들 간의 데이터 전송에 사용되는 선들의 집합
주소 버스: CPU가 기억장치나 I/O 장치를 액세스할 때 주소 비트들을 전송하는 데 사용되는 선들의 집합
제어 버스: 제어 신호들을 전송하기 위한 선들의 집합
버스 마스터(bus master): 시스템 버스 사용의 주체가 되는 요소
버스 중재(bus arbitration): 두 개 이상의 버스 마스터들이 동시에 버스 사용을 요청할 경우에 순서를 결정해주는 시스템 동작
중재 버스(arbitration bus): 버스 중재 동작에 필요한 신호 선들의 집합
인터럽트 버스(interrupt bus): 인터럽트 매커니즘을 지원하는 신호 선들의 집합
버스 대역폭(bus bandwidth): 버스를 통하여 단위시간당 전송할 수 있는 데이터량

          7.1.2 시스템 버스의 기본 동작

동기식 버스(synchronous bus): 공통의 버스 클록을 기준으로 버스 동작들이 발생되는 버스
비동기식 버스(asynchronous bus): 버스 클록을 사용하지 않으며, 버스 동작들의 발생 시간이 다른 관련 동작의 발생에 따라 결정되는 버스

     7.2 버스 중재

버스 경합(bus contention): 두 개 이상의 버스 마스터들이 동시에 버스 사용을 위해 경쟁하는 상황
병렬 중재 방식: 각 버스 마스터가 독립적인 버스요구 신호를 버스 중재기로 보내며, 별도의 버스 승인 신호를 받는 방식
직렬 중재 방식: 버스요구 신호와 버스승인 신호가 하나씩 있으며, 각 신호 선이 모든 버스 마스터들 간에 직렬로 접속되는 방식
중앙집중식 중재 방식: 한 개의 버스 중재기가 모든 버스 중재 기능을 수행하는 방식
분산식 중재 방식: 버스 중재 동작이 각 버스 마스터가 별도로 가지고 있는 버스 중재기들에 의해 이루어지는 방식

          7.2.1 병렬 중재 방식

버스 요구(BREQ) 신호: 버스 마스터가 버스 사용을 요청하는 신호
버스 승인(BGNT) 신호: 버스 마스터에게 버스 사용을 허가하는 신호
가변 우선순위 방식: 버스 사용 우선순위를 계속 변경시키는 중재 방식으로서, 버스 사용 기회의 불균등이나 기근 현상을 방지해주지만 회로 구현이 더 어려움

          7.2.2 직렬 중재 방식
          7.2.3 폴링 방식

하드웨어 폴링 방식: 중재기 내의 고정된 하드웨어를 이용한 주기적 검사를 통해 중재 기능을 수행하는 방식
소프트웨어 폴링 방식: 중재기 내의 프로세서가 중재 프로그램을 수행하면서 다양한 중재 기능을 수행하는 방식

     7.3 I/O 장치의 접속
          7.3.1 I/O 제어

I/O 제어기: CPU와 I/O장치(들) 간의 인터페이스 역할을 수행해주는 하드웨어 모듈
프로그램을 이용한 I/O: CPU가 반복적으로 I/O 장치의 상태를 검사하면서 I/O 동작을 처리하는 방식

          7.3.2 I/O 주소지정

기억장치-사상 I/O: I/O 제어기 내의 레지스터들에게 기억장치 주소 영역의 일부분을 할당하고, 기억장치와 같은 방법으로 액세스하는 방식
분리형 I/O: I/O 장치들에 별도의 I/O 주소 영역을 지정하고, I/O 전용 명령어들을 이용하여 액세스하는 방식

     7.4 인터럽트를 이용한 I/O

인터럽트-구동 I/O: 인터럽트 메커니즘을 이용하여 CPU와 I/O 장치간의 상호작용이 처리되는 방식

          7.4.1 다중 인터럽트 방식: 인터럽트 요구 신호 선과 인터럽트 확인 신호 선이 한 개씩 존재
          7.4.2 데이지-체인 방식: 모든 I/O 제어기들은 한 개의 INTR 선을 공유
          7.4.3 소프트웨어 폴링 방식: 한 개의 TEST I/O 선이 CPU와 모든 제어기들 사이에 연결
     7.5 DMA를 이용한 I/O

직접기억장치액세스 (DMA:Direct Memory Access): CPU의 개입 없이 I/O 장치와 기억장치 사이에 데이터 전송을 수행하는 메커니즘
사이클 스틸링: CPU가 시스템 버스를 사용하지 않는 동안에 DMA 제어기가 버스를 사용한다는 것을 의미하는 용어
I/O 프로세서(IOP): I/O 장치들의 동작을 제어하며 DMA 동작도 지원하는 프로세서


(Chapter 8 고성능 컴퓨터시스템 구조)

병렬처리: 다수의 프로세서들을 이용하여 여러 프로그램들을 분담하여 동시에 처리하는 기술
문제 분할: 병렬처리를 위하여 하나의 문제를 여러 개로 나누는 작업
프로세서간 통신: 프로세서들이 서로 필요한 데이터를 교환하기 위한 통신
멀티-스레딩: 가장 작은 크기의 독립적인 단위 프로그램인 스레드들을 여러 프로세서 코어들이 병렬로 처리하는 기술

명령어 스트림: 실행되기 위하여 순서대로 프로세서로 들어오는 명령어 코드들의 흐름
데이터 스트림: 명령어 실행에 사용되기 위하여 순서대로 프로세서로 들어오는 데이터들의 흐름

SISD 단일 명령어 스트림 - 단일 데이터 스트림
SIMD 단일 명령어 스트림 - 복수 데이터 스트림
MISD 복수 명령어 스트림 - 단일 데이터 스트림
MIMD 복수 명령어 스트림 - 복수 데이터 스트림

밀결합 시스템: 프로세서들 간의 상호작용 정도가 높은 다중프로세서 시스템
소결합 시스템: 프로세서들 간의 상호작용 정도가 낮고 거의 독립적으로 동작하는 다중프로세서 시스템

UMA 모델: 모든 프로세서들이 기억장치를 공유하며 액세스에 걸리는 시간도 같은 시스템 구조
NUMA 모델:  공유 기억장치들과 프로세서들 간의 거리에 따라 액세스 시간이 달라지는 시스템 구조
NORMA 모델: 각 프로세서들이 별도의 기억장치를 가지며, 공유 기억장치는 없는 구조